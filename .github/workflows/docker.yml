name: Deploy Container

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clone homarr-docker
      run: |
        cd ./tests/homarr
        git clone https://github.com/jmrenier13/Homarr-Docker
        cd ../../

    - name: Set env
      run: |
        echo "DIR=./tests/nginx" >> $GITHUB_ENV
        echo "ROOT_PASSWORD=npm" >> $GITHUB_ENV
        echo "NPM_PASSWORD=npm" >> $GITHUB_ENV

    - name: Create networks
      run: docker network create -d bridge proxy

    - name: Start docker containers
      run: |
        docker compose --file ./tests/homarr/Homarr-Docker/docker-compose.yml --env-file ./tests/homarr/homarr.env up --detach
        docker compose up --wait --wait-timeout 120 --detach

    - name: Show containers
      run: docker container ps

    - name: DNS
      run: sudo echo "127.0.0.1  homarr.example.com" | sudo tee -a /etc/hosts

    - name: Check DNS
      run: |
        echo "$(</etc/hosts)"
        nslookup homarr.example.com

    - name: Old proxy
      run: |
        docker cp nginx:/etc/nginx/conf.d/default.conf default.conf
        echo "$(<default.conf)"

    - name: Update proxy
      run: |
        docker cp ./tests/nginx/default.conf nginx:/etc/nginx/conf.d/default.conf
        docker exec nginx-base nginx -t
        docker exec nginx-base nginx -s reload

    - name: Is site up
      run: |
        curl -sf homarr.example.com > /dev/null
        if [ ! $? = 6 ]; then echo "Site is up"; else echo "Site is down"; exit 1; fi

